<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.NormalUserDao">
	<select id="getApplicationsByUserId" resultMap="applicationResultMap" parameterType="String">
		select Application.ID as ApplicationID, UserID, RoomID, SubmitTime, zhouCi, XingQi, 
			SJieCi, EJieCi, Application.Type as ApplicationType, Purpose, 
			ReviewerID, ReviewTime, Approval,ReviewContent,Feedback,FeedbackTime,ReadFeedback,
			User.Name as UserName, Phone, Email, Department,
			Classroom.Name as ClassroomName, Classroom.Type as RoomType, 
			XiaoQu,JiaoXueQu, JiaoXueLou, Floor, Capacity, Available
				from Application,User,Classroom 
					where Application.UserID=User.ID and Application.RoomID=Classroom.ID
						and UserID=#{userID};
	</select>
	<select id="getApplicationById" resultMap="applicationResultMap" parameterType="int">
		select Application.ID as ApplicationID, UserID, RoomID, SubmitTime, zhouCi, XingQi, 
			SJieCi, EJieCi, Application.Type as ApplicationType, Purpose, 
			ReviewerID, ReviewTime, Approval,ReviewContent,Feedback,FeedbackTime,ReadFeedback,
			User.Name as UserName, Phone, Email, Department,
			Classroom.Name as ClassroomName, Classroom.Type as RoomType, 
			XiaoQu,JiaoXueQu, JiaoXueLou, Floor, Capacity, Available
				from Application,User,Classroom 
					where Application.ID=#{id} and Application.UserID=User.ID and Application.RoomID=Classroom.ID;
	</select>
	<resultMap id="applicationResultMap" type="application">
		<id column="ApplicationID" property="id"></id>
		<id column="UserID" property="userID"></id>
		<id column="RoomID" property="roomID"></id>
		<id column="SubmitTime" property="submitTime"></id>
		<id column="ZhouCi" property="zhouCi"></id>
		<id column="XingQi" property="xingQi"></id>
		<id column="SJieCi" property="sJieCi"></id>
		<id column="EJieCi" property="eJieCi"></id>
		<id column="ApplicationType" property="type"></id>
		<id column="Purpose" property="purpose"></id>
		<id column="ReviewerID" property="reviewerID"></id>
		<id column="ReviewTime" property="reviewTime"></id>
		<id column="Approval" property="approval"></id>
		<id column="ReviewContent" property="reviewContent"></id>
		<id column="Feedback" property="feedback"/>
		<id column="FeedbackTime" property="feedbackTime"/>
		<id column="ReadFeedback" property="readFeedback"/>
		
		<association property="user" javaType="user">
			<id column="UserName" property="name"></id>
			<id column="Phone" property="phone"></id>
			<id column="Email" property="email"></id>
			<id column="Department" property="department"></id>
		</association>
		<association property="classroom" javaType="classroom">
			<id column="ClassroomName" property="name"></id>
			<id column="RoomType" property="type"></id>
			<id column="XiaoQu" property="xiaoQu"></id>
			<id column="JiaoXueQu" property="jiaoXueQu"></id>
			<id column="JiaoXueLou" property="jiaoXueLou"></id>
			<id column="Floor" property="floor"></id>
			<id column="Capacity" property="capacity"></id>
			<id column="Available" property="available"></id>
		</association>
		<association property="reviewer" javaType="user">
			<id column="UserName" property="name"></id>
			<id column="Phone" property="phone"></id>
			<id column="Email" property="email"></id>
			<id column="Department" property="department"></id>
		</association>
	</resultMap>
	<select id="getRoomSchedulesByApplication" resultType="roomSchedule" parameterType="Application">
		select * from RoomSchedule where RoomID=#{roomID} and ZhouCi=#{zhouCi} and XingQi=#{xingQi};
	</select>
	<select id="getApplicationsByApplication" resultType="application" parameterType="Application">
		select * from Application where RoomID=#{roomID} and ZhouCi=#{zhouCi} and XingQi=#{xingQi} 
			and (Approval != 0 or Approval is null);
	</select>
	<update id="updateApplication" parameterType="Application">
		update Application set ZhouCi=${zhouCi}, XingQi=#{xingQi}, SJieCi=#{sJieCi}, 
			EJieCi=#{eJieCi}, Type=#{type}, Purpose=#{purpose} 
				where ID=${id} and not exists(
					select 1 from Application where ((SJieCi &gt;=#{sJieCi} and SJieCi &lt;=#{eJieCi})
						or (EJieCi &gt;=#{sJieCi} and EJieCi &lt;=#{eJieCi}))
						and RoomID=#{roomID} and ZhouCi=#{zhouCi} and XingQi=#{xingQi} and ID !=#{id}
				) and not exists(
					select 1 from RoomSchedule where ((SJieCi &gt;=#{sJieCi} and SJieCi &lt;=#{eJieCi})
						or (EJieCi &gt;=#{sJieCi} and EJieCi &lt;=#{eJieCi}))
						and RoomID=#{roomID} and ZhouCi=#{zhouCi} and XingQi=#{xingQi}
				);
	</update>
	<delete id="deleteApplicationById" parameterType="int">
		delete from Application where ID=#{id};
	</delete>
	
	<select id="getAllXiaoQu" resultType="String">
		select distinct XiaoQu from Classroom where Available=true;
	</select>
	<select id="getAllJiaoXueQuByXiaoQu" resultType="String" parameterType="String">
		select distinct JiaoXueQu from Classroom where Available=true and XiaoQu=#{xiaoQu};
	</select>
	<select id="getAllJiaoXueLouByXJ" resultType="String" parameterType="String">
		select distinct JiaoXueLou from Classroom 
			where Available=true and XiaoQu=#{xiaoQu} and JiaoXueQu=#{jiaoXueQu};
	</select>
	<select id="getAllTypeByXJJ" resultType="String">
		select distinct Type from Classroom where Available=true 
				and XiaoQu=#{xiaoQu} and JiaoXueQu=#{jiaoXueQu} and JiaoXueLou=#{jiaoXueLou};
	</select>
	<select id="getAllFloorByXJJT" resultType="String">
		select distinct Floor from Classroom 
			where Available=true and XiaoQu=#{xiaoQu} and JiaoXueQu=#{jiaoXueQu} 
				and JiaoXueLou=#{jiaoXueLou} and Type=#{type};
	</select>
	<select id="getAllRoomIDByXJJTF" resultType="String">
		select distinct ID from Classroom 
			where Available=true and XiaoQu=#{xiaoQu} and JiaoXueQu=#{jiaoXueQu} 
				and JiaoXueLou=#{jiaoXueLou} and Type=#{type} and Floor=#{floor};
	</select>
	<select id="getRoomsByApply" resultType="Classroom" parameterType="Application">
		select Floor,ID,Capacity,name from Classroom where ID not in(
			select RoomID from Application,Classroom 
				where Application.RoomID=Classroom.ID and XiaoQu=#{classroom.xiaoQu} 
					and JiaoXueQu=#{classroom.jiaoXueQu}
					and JiaoXueLou=#{classroom.jiaoXueLou} and Classroom.Type=#{classroom.type}
					and ZhouCi=#{zhouCi} and XingQi=#{xingQi} 
					and ((SJieCi &gt;=#{sJieCi} and SJieCi &lt;=#{eJieCi}) 
						or (EJieCi &gt;=#{sJieCi} and EJieCi &lt;=#{eJieCi}))
					and (Approval=1 or Approval is null) 
			union
			select RoomID from Classroom,RoomSchedule
				where RoomSchedule.RoomID=Classroom.ID and XiaoQu=#{classroom.xiaoQu} 
					and JiaoXueQu=#{classroom.jiaoXueQu} 
					and JiaoXueLou=#{classroom.jiaoXueLou} and Classroom.Type=#{classroom.type} 
					and ZhouCi=#{zhouCi} and XingQi=#{xingQi} 
					and ((SJieCi &gt;=#{sJieCi} and SJieCi &lt;=#{eJieCi}) 
						or (EJieCi &gt;=#{sJieCi} and EJieCi &lt;=#{eJieCi}))
		) and XiaoQu=#{classroom.xiaoQu} and JiaoXueQu=#{classroom.jiaoXueQu} 
			and jiaoXueLou=#{classroom.jiaoXueLou} and Type=#{classroom.type} and Available=true;
	</select>
	<select id="getClassroomById" resultType="Classroom" parameterType="String">
		select * from Classroom where ID=#{id};
	</select>
	<insert id="insertApplication" parameterType="Application">
		insert into Application(UserID,RoomID,ZhouCi,XingQi,SJieCi,EJieCi,Type,Purpose)
			select #{userID},#{roomID},#{zhouCi},#{xingQi},#{sJieCi},#{eJieCi},#{type},#{purpose}
				from dual where not exists(
					select 1 from Application where ((SJieCi &gt;=#{sJieCi} and SJieCi &lt;=#{eJieCi})
						or (EJieCi &gt;=#{sJieCi} and EJieCi &lt;=#{eJieCi}))
						and RoomID=#{roomID} and ZhouCi=#{zhouCi} and XingQi=#{xingQi}
					union
					select 1 from RoomSchedule where ((SJieCi &gt;=#{sJieCi} and SJieCi &lt;=#{eJieCi})
						or (EJieCi &gt;=#{sJieCi} and EJieCi &lt;=#{eJieCi}))
						and RoomID=#{roomID} and ZhouCi=#{zhouCi} and XingQi=#{xingQi}
					union
					select 1 from Classroom where ID=#{roomID} and Available=false
				);
	</insert>
	
	<update id="updateFeedback" parameterType="Application">
		update Application set Feedback=#{feedback},FeedbackTime=CURRENT_TIMESTAMP where ID=#{id};
	</update>
	<select id="getFeedbacksByRoomID" parameterType="String" resultMap="applicationResultMap">
		select User.Name as UserName,Feedback,FeedbackTime from Application,User 
			where Application.UserID=User.ID and RoomID=#{roomID};
	</select>
</mapper>